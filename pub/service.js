app.service('myserv', function() {
          this.getServiceList = function () {
    return [{"serviceName":"jc.kafka.example.consumer.collectTemperatures_:stream_target","description":"This service was auto-generated by the trigger \u0027jc.kafka.example.consumer:collectTemperatures\u0027","serviceinputs":[{"inputName":"stream_calculations","inputType":"Document List","inputComments":"no comment","required":true,"wrapperType":"--"}],"serviceoutputs":[]},{"serviceName":"jc.kafka.example.producer:emitTemperature","description":"This service publishes a collectiion of temperatures to the kafka provider indicated by the connection \u0027jc_kafka_example_conn\u0027","serviceinputs":[{"inputName":"keyPrefix","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"temperatures(jc.kafka.example.common.documents:Temperature)","inputType":"Document Reference List","inputComments":"no comment","required":true,"wrapperType":"--"}],"serviceoutputs":[]}];
}
this.getISEndpoint = function() { 
 return 'http://localhost:5555/';
}
this.getAPIList = function() { 
 return [];
}
this.getCreatedTime = function() { 
 return "17-01-2024 11:02:52 CET";
}
this.getPackageInfo = function(){
 return{"packageName":"JcKafkaExample","displayName":"Kafka Streaming demo","status":"Prototype","tags":["demo","kafka","event_streaming"],"createdDate":"12-01-2024 13:49:05 CET","version":"1.0","buildNumber":"1","description":"A demo package to demonstrate our new event streaming feature \nintroduced with webMethods 11.0."};
}
});
